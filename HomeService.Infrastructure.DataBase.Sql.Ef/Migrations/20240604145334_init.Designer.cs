// <auto-generated />
using System;
using HomeService.Infrastructure.DataBase.Sql.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeService.Infrastructure.DataBase.Sql.Ef.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240604145334_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpertService", b =>
                {
                    b.Property<int>("ExpertsId")
                        .HasColumnType("int");

                    b.Property<int>("ServicesId")
                        .HasColumnType("int");

                    b.HasKey("ExpertsId", "ServicesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("ExpertService");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ProfileImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            ApplicationUserId = 1,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 556, DateTimeKind.Local).AddTicks(7411),
                            FirstName = "حانیه",
                            IsDeleted = false,
                            LastName = "امین زاده",
                            PhoneNumber = "0910000000",
                            ProfileImgUrl = "/assets/img/admins/1.jpg"
                        });
                });

            modelBuilder.Entity("HomeService.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccept")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1af84c50-2a68-4993-a306-0a811a75a1d8",
                            Email = "Admin@gmail.com",
                            EmailConfirmed = false,
                            IsAccept = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOAYZ7mTXi3ldCBSKObPCjCmpus79jpdr3IGzCbUYC1WEJ8TuSnidCz+wZyWAflbgA==",
                            PhoneNumber = "09377507920",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7a08ae43-633f-4c6e-947c-7bd794dc7a69",
                            TwoFactorEnabled = false,
                            UserName = "Admin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a1e60f7b-204e-4eb7-8baf-ffb0652ec211",
                            Email = "Ali@gmail.com",
                            EmailConfirmed = false,
                            IsAccept = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ALI@GMAIL.COM",
                            NormalizedUserName = "ALI@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFtBE0CeW5aBd1p5XscueCVIvtWx/pSjRZIUHrAq/+TyIuxaMhEnJuJ1/KGR2nEjSQ==",
                            PhoneNumber = "09377507920",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1f0e2acd-cf44-4b23-9153-6b4ae57651db",
                            TwoFactorEnabled = false,
                            UserName = "Ali@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1108149-ec21-4bdc-b5e2-ed3643b2bdb8",
                            Email = "Sahar@gmail.com",
                            EmailConfirmed = false,
                            IsAccept = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SAHAR@GMAIL.COM",
                            NormalizedUserName = "SAHAR@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDB3NpSDZDJFyc+bPTs3kVGnOpHrB0FIoioQTjfZ9UiLdbWx4cXVOhwl4pTLYV960Q==",
                            PhoneNumber = "09377507920",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "521b7960-d47e-4dbb-9f7e-f836a930c641",
                            TwoFactorEnabled = false,
                            UserName = "Sahar@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "590108a8-ff42-4798-8e61-86300056e213",
                            Email = "Maryam@gmail.com",
                            EmailConfirmed = false,
                            IsAccept = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MARYAM@GMAIL.COM",
                            NormalizedUserName = "MARYAM@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJrPSkVJ95i5oiIdHA5XhAgpQ7a3QlXHDMhdS4xkB01bLfSwXEJ8WWNMrpcp2e5sGg==",
                            PhoneNumber = "09377507920",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a376716-e768-46c1-9627-62bd1db727eb",
                            TwoFactorEnabled = false,
                            UserName = "Maryam@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ee1cad7-adc9-453b-a41d-2a7f6c563bca",
                            Email = "Sara@gmail.com",
                            EmailConfirmed = false,
                            IsAccept = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SARA@GMAIL.COM",
                            NormalizedUserName = "SARA@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEALLEsj1Xlms7Q0+fPU8Pcb6uBSL869APdhO1xPRB3ACWmDD6WaqA6M2DVtdFuLLgg==",
                            PhoneNumber = "09987507920",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "32b4d559-036d-4b1d-bd7a-74599254290f",
                            TwoFactorEnabled = false,
                            UserName = "Sara@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "def101ae-2272-47ff-9a6f-71aba76af604",
                            Email = "Milad@gmail.com",
                            EmailConfirmed = false,
                            IsAccept = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MILAD@GMAIL.COM",
                            NormalizedUserName = "MILAD@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENKNnYHppF6gd50LPxBKhezc6e05T6vEnlAybV53cJJrcfEyLme5Kok8ypuwItvdXw==",
                            PhoneNumber = "09377907920",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "358969ec-5bc6-4551-9f94-0ace2356d26d",
                            TwoFactorEnabled = false,
                            UserName = "Milad@gmail.com"
                        });
                });

            modelBuilder.Entity("HomeService.Core.Entities.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateOfRegisteration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfWork")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWinner")
                        .HasColumnType("bit");

                    b.Property<int?>("ProposedPrice")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpertId");

                    b.HasIndex("RequestId");

                    b.ToTable("Bids", (string)null);
                });

            modelBuilder.Entity("HomeService.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4297),
                            ImgUrl = "assets/img/b-1.jpg",
                            IsDeleted = false,
                            Name = "آموزش"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4314),
                            ImgUrl = "assets/img/car/c-2.jpg",
                            IsDeleted = false,
                            Name = "حمل و نقل"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4315),
                            ImgUrl = "assets/img/listing/l-3.jpg",
                            IsDeleted = false,
                            Name = "خدمات منزل "
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4317),
                            ImgUrl = "assets/img/c-4.jpg",
                            IsDeleted = false,
                            Name = "تاسیسات"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4318),
                            ImgUrl = "assets/img/real/r-8.jpg",
                            IsDeleted = false,
                            Name = "بنایی و ساخت و ساز"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4320),
                            ImgUrl = "assets/img/listing/1-5.jpg",
                            IsDeleted = false,
                            Name = "خدمات زیبایی"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4321),
                            ImgUrl = "assets/img/med/4.jpg",
                            IsDeleted = false,
                            Name = "سلامت و بهداشت"
                        },
                        new
                        {
                            Id = 8,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4322),
                            ImgUrl = "assets/img/med/8.jpg",
                            IsDeleted = false,
                            Name = "حیوانات"
                        },
                        new
                        {
                            Id = 9,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4324),
                            ImgUrl = "assets/img/b-5.jpg",
                            IsDeleted = false,
                            Name = "کسب و کار"
                        },
                        new
                        {
                            Id = 10,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 558, DateTimeKind.Local).AddTicks(4325),
                            ImgUrl = "assets/img/b-4.jpg",
                            IsDeleted = false,
                            Name = "دیجیتال"
                        });
                });

            modelBuilder.Entity("HomeService.Core.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7021),
                            IsDeleted = false,
                            Name = "تهران"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7075),
                            IsDeleted = false,
                            Name = "اردبیل"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7077),
                            IsDeleted = false,
                            Name = "فارس"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7078),
                            IsDeleted = false,
                            Name = "اصفهان"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7079),
                            IsDeleted = false,
                            Name = "زنجان"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7080),
                            IsDeleted = false,
                            Name = "آذربایجان شرقی"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7082),
                            IsDeleted = false,
                            Name = "آذربایجان غربی"
                        },
                        new
                        {
                            Id = 8,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7083),
                            IsDeleted = false,
                            Name = "خوزستان"
                        },
                        new
                        {
                            Id = 9,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7085),
                            IsDeleted = false,
                            Name = "مازندران"
                        },
                        new
                        {
                            Id = 10,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7086),
                            IsDeleted = false,
                            Name = "کرمان"
                        },
                        new
                        {
                            Id = 11,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7087),
                            IsDeleted = false,
                            Name = "سیستان و بلوچستان"
                        },
                        new
                        {
                            Id = 12,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7088),
                            IsDeleted = false,
                            Name = "البرز"
                        },
                        new
                        {
                            Id = 13,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7089),
                            IsDeleted = false,
                            Name = "گیلان"
                        },
                        new
                        {
                            Id = 14,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7090),
                            IsDeleted = false,
                            Name = "کرمانشاه"
                        },
                        new
                        {
                            Id = 15,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7091),
                            IsDeleted = false,
                            Name = "گلستان"
                        },
                        new
                        {
                            Id = 16,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7126),
                            IsDeleted = false,
                            Name = "لرستان"
                        },
                        new
                        {
                            Id = 17,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7127),
                            IsDeleted = false,
                            Name = "هرمزگان"
                        },
                        new
                        {
                            Id = 18,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7128),
                            IsDeleted = false,
                            Name = "همدان"
                        },
                        new
                        {
                            Id = 19,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7139),
                            IsDeleted = false,
                            Name = "کردستان"
                        },
                        new
                        {
                            Id = 20,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7156),
                            IsDeleted = false,
                            Name = "قم"
                        },
                        new
                        {
                            Id = 21,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7157),
                            IsDeleted = false,
                            Name = "مرکزی"
                        },
                        new
                        {
                            Id = 22,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7158),
                            IsDeleted = false,
                            Name = "قزوین"
                        },
                        new
                        {
                            Id = 23,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7159),
                            IsDeleted = false,
                            Name = "خراسان رضوی"
                        },
                        new
                        {
                            Id = 24,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7161),
                            IsDeleted = false,
                            Name = "یزد"
                        },
                        new
                        {
                            Id = 25,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7162),
                            IsDeleted = false,
                            Name = "بوشهر"
                        },
                        new
                        {
                            Id = 26,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7163),
                            IsDeleted = false,
                            Name = "چهارمحال بختیاری"
                        },
                        new
                        {
                            Id = 27,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7164),
                            IsDeleted = false,
                            Name = "خراسان شمالی"
                        },
                        new
                        {
                            Id = 28,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7165),
                            IsDeleted = false,
                            Name = "خراسان جنوبی"
                        },
                        new
                        {
                            Id = 29,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7166),
                            IsDeleted = false,
                            Name = "سمنان"
                        },
                        new
                        {
                            Id = 30,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7167),
                            IsDeleted = false,
                            Name = "ایلام"
                        },
                        new
                        {
                            Id = 31,
                            Active = false,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 559, DateTimeKind.Local).AddTicks(7168),
                            IsDeleted = false,
                            Name = "کهکیلویه و بویر احمد"
                        });
                });

            modelBuilder.Entity("HomeService.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CommentText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExpertId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("HomeService.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ProfileImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.HasIndex("CityId");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            Address = "تهران، زمزم",
                            ApplicationUserId = 2,
                            CardNumber = "6062731158189235",
                            CityId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 561, DateTimeKind.Local).AddTicks(4532),
                            FirstName = "علی",
                            IsDeleted = false,
                            LastName = "کرامت",
                            PhoneNumber = "091234567",
                            ProfileImgUrl = "/assets/img/customers/1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Address = "اصفهان",
                            ApplicationUserId = 3,
                            CardNumber = "2232789665980654",
                            CityId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 561, DateTimeKind.Local).AddTicks(4586),
                            FirstName = "علی",
                            IsDeleted = false,
                            LastName = "کریمی",
                            PhoneNumber = "0919048876",
                            ProfileImgUrl = "/assets/img/customers/2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            Address = "قم",
                            ApplicationUserId = 4,
                            CardNumber = "2345654367587790",
                            CityId = 20,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 561, DateTimeKind.Local).AddTicks(4594),
                            FirstName = "رضا",
                            IsDeleted = false,
                            LastName = "رضائی",
                            PhoneNumber = "099076483",
                            ProfileImgUrl = "/assets/img/customers/3.jpg"
                        });
                });

            modelBuilder.Entity("HomeService.Core.Entities.Expert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ProfileImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<string>("ShebaNumber")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.HasIndex("CityId");

                    b.ToTable("Experts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            Address = "تهران، اکباتان",
                            ApplicationUserId = 5,
                            CityId = 1,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 563, DateTimeKind.Local).AddTicks(907),
                            FirstName = "سارا",
                            IsDeleted = false,
                            LastName = "امینی",
                            PhoneNumber = "09377907920"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Address = "تهران",
                            ApplicationUserId = 6,
                            CityId = 1,
                            CreateAt = new DateTime(2024, 6, 4, 18, 23, 30, 563, DateTimeKind.Local).AddTicks(927),
                            FirstName = "میلاد",
                            IsDeleted = false,
                            LastName = "امیری",
                            PhoneNumber = "09377907920"
                        });
                });

            modelBuilder.Entity("HomeService.Core.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfImplemention")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfRegisteration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Requests", (string)null);
                });

            modelBuilder.Entity("HomeService.Core.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7439),
                            ImgUrl = "",
                            IsDeleted = false,
                            Price = 200000,
                            Title = "آموزش موسیقی ویولن"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7471),
                            IsDeleted = false,
                            Price = 400000,
                            Title = "آموزش تار"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7476),
                            IsDeleted = false,
                            Price = 300000,
                            Title = "آموزش هنگ درام"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7481),
                            IsDeleted = false,
                            Price = 500000,
                            Title = "آموزش زبان انگلیسی"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7486),
                            IsDeleted = false,
                            Price = 700000,
                            Title = "آموزش نقاشی و طراحی"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7490),
                            IsDeleted = false,
                            Price = 60000,
                            Title = "آموزش عکاسی"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7495),
                            IsDeleted = false,
                            Price = 55000,
                            Title = "آموزش آشپزی"
                        },
                        new
                        {
                            Id = 8,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7500),
                            IsDeleted = false,
                            Price = 70000,
                            Title = "آموزش خیاطی"
                        },
                        new
                        {
                            Id = 9,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7505),
                            IsDeleted = false,
                            Price = 390000,
                            Title = "آموزش پیانو"
                        },
                        new
                        {
                            Id = 10,
                            Active = false,
                            CategoryId = 1,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7509),
                            IsDeleted = false,
                            Price = 450000,
                            Title = "آموزش رباتیک"
                        },
                        new
                        {
                            Id = 11,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7514),
                            IsDeleted = false,
                            Price = 500000,
                            Title = "کارگر اسباب کشی"
                        },
                        new
                        {
                            Id = 12,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7519),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "سرویس و تعمیر خودرو"
                        },
                        new
                        {
                            Id = 13,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7524),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "کارواش ماشین"
                        },
                        new
                        {
                            Id = 14,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7529),
                            IsDeleted = false,
                            Price = 350000,
                            Title = "سرویس و تعمیر موتور سیکلت"
                        },
                        new
                        {
                            Id = 15,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7534),
                            IsDeleted = false,
                            Price = 500000,
                            Title = "باربری و اتوبار"
                        },
                        new
                        {
                            Id = 16,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7541),
                            IsDeleted = false,
                            Price = 2000000,
                            Title = "صافکاری و نقاشی"
                        },
                        new
                        {
                            Id = 17,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7546),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "اجار خودرو"
                        },
                        new
                        {
                            Id = 18,
                            Active = false,
                            CategoryId = 2,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7548),
                            IsDeleted = false,
                            Price = 600000,
                            Title = "بسته بندی و اسباب اثاثیه"
                        },
                        new
                        {
                            Id = 19,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7550),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "نظافت منزل"
                        },
                        new
                        {
                            Id = 20,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7552),
                            IsDeleted = false,
                            Price = 80000,
                            Title = "نظافت راه پله و فضای مشاع"
                        },
                        new
                        {
                            Id = 21,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7554),
                            IsDeleted = false,
                            Price = 80000,
                            Title = "نظافت سوله و انبار"
                        },
                        new
                        {
                            Id = 22,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7556),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "نظافت استخیر"
                        },
                        new
                        {
                            Id = 23,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7558),
                            IsDeleted = false,
                            Price = 500000,
                            Title = "سرایداری و نگهبانی"
                        },
                        new
                        {
                            Id = 24,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7560),
                            IsDeleted = false,
                            Price = 750000,
                            Title = "ضدعفونی منزل و محل کار"
                        },
                        new
                        {
                            Id = 25,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7562),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "قالیشویی"
                        },
                        new
                        {
                            Id = 26,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7564),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "مبلشویی"
                        },
                        new
                        {
                            Id = 27,
                            Active = false,
                            CategoryId = 3,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7565),
                            IsDeleted = false,
                            Price = 800000,
                            Title = "فیشینگ ساختمان"
                        },
                        new
                        {
                            Id = 28,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7567),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "نصب ماشین ظرفشویی"
                        },
                        new
                        {
                            Id = 29,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7569),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "نصب ماشین لباسشویی"
                        },
                        new
                        {
                            Id = 30,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7571),
                            IsDeleted = false,
                            Price = 800000,
                            Title = "نصب و تعمیر شیرآلات"
                        },
                        new
                        {
                            Id = 31,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7573),
                            IsDeleted = false,
                            Price = 350000,
                            Title = "نصب و تعمیر دوربین مداربسته"
                        },
                        new
                        {
                            Id = 32,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7575),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "نصب و تعمیر آیفون تصویری و صوتی"
                        },
                        new
                        {
                            Id = 33,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7577),
                            IsDeleted = false,
                            Price = 3000000,
                            Title = "سیم کشی ساختمان"
                        },
                        new
                        {
                            Id = 34,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7580),
                            IsDeleted = false,
                            Price = 550000,
                            Title = "نصب و تعمیر موتور برق"
                        },
                        new
                        {
                            Id = 35,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7582),
                            IsDeleted = false,
                            Price = 700000,
                            Title = "نصب و تعمیر لوستر و برق"
                        },
                        new
                        {
                            Id = 36,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7584),
                            IsDeleted = false,
                            Price = 750000,
                            Title = "نصب و تعمیر دزدگیر ساختمان"
                        },
                        new
                        {
                            Id = 37,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7586),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "تعمیر تلفن"
                        },
                        new
                        {
                            Id = 38,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7588),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "نصب و تعمیر دستگاه پوز و کارتخوان"
                        },
                        new
                        {
                            Id = 39,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7590),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "نصب و تعمیر پکیج سرمایشی و گرمایشی"
                        },
                        new
                        {
                            Id = 40,
                            Active = false,
                            CategoryId = 4,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7592),
                            IsDeleted = false,
                            Price = 1500000,
                            Title = "خدمات برق صنعتی"
                        },
                        new
                        {
                            Id = 41,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7594),
                            IsDeleted = false,
                            Price = 5000000,
                            Title = "ساخت و نصب و تعمیر سوله و کانکس"
                        },
                        new
                        {
                            Id = 42,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7596),
                            IsDeleted = false,
                            Price = 900000,
                            Title = "کارگر ساده"
                        },
                        new
                        {
                            Id = 43,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7598),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "بنایی"
                        },
                        new
                        {
                            Id = 44,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7600),
                            IsDeleted = false,
                            Price = 10000000,
                            Title = "بازسازی خانه"
                        },
                        new
                        {
                            Id = 45,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7601),
                            IsDeleted = false,
                            Price = 5000000,
                            Title = "سیمان کاری"
                        },
                        new
                        {
                            Id = 46,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7603),
                            IsDeleted = false,
                            Price = 550000,
                            Title = "نصب کاشی و سرامیک"
                        },
                        new
                        {
                            Id = 47,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7605),
                            IsDeleted = false,
                            Price = 45000,
                            Title = "سنگ کاری"
                        },
                        new
                        {
                            Id = 48,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7607),
                            IsDeleted = false,
                            Price = 20000000,
                            Title = "گچ کاری و گچبری"
                        },
                        new
                        {
                            Id = 49,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7609),
                            IsDeleted = false,
                            Price = 30000000,
                            Title = "ساخت و تعمیر استخر و سونا و جکوزی"
                        },
                        new
                        {
                            Id = 50,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7611),
                            IsDeleted = false,
                            Price = 20000000,
                            Title = "تخریب ساختمان"
                        },
                        new
                        {
                            Id = 51,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7617),
                            IsDeleted = false,
                            Price = 1500000,
                            Title = "رفع نم و رطوبت"
                        },
                        new
                        {
                            Id = 52,
                            Active = false,
                            CategoryId = 5,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7619),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "رابیس کاری"
                        },
                        new
                        {
                            Id = 53,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7620),
                            IsDeleted = false,
                            Price = 4000000,
                            Title = "رنگ مو"
                        },
                        new
                        {
                            Id = 54,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7622),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "شینیون مو"
                        },
                        new
                        {
                            Id = 55,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7624),
                            IsDeleted = false,
                            Price = 3000000,
                            Title = "تتو"
                        },
                        new
                        {
                            Id = 56,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7626),
                            IsDeleted = false,
                            Price = 300000,
                            Title = "اصلاح سر و صورت"
                        },
                        new
                        {
                            Id = 57,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7628),
                            IsDeleted = false,
                            Price = 500000,
                            Title = "خدمات ناخن"
                        },
                        new
                        {
                            Id = 58,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7630),
                            IsDeleted = false,
                            Price = 350000,
                            Title = "پاکسازی صورت"
                        },
                        new
                        {
                            Id = 59,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7631),
                            IsDeleted = false,
                            Price = 1500000,
                            Title = "میکاپ صورت"
                        },
                        new
                        {
                            Id = 60,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7633),
                            IsDeleted = false,
                            Price = 3000000,
                            Title = "کراتینه مو"
                        },
                        new
                        {
                            Id = 61,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7635),
                            IsDeleted = false,
                            Price = 550000,
                            Title = "ویتامینه و ماسک مو"
                        },
                        new
                        {
                            Id = 62,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7637),
                            IsDeleted = false,
                            Price = 3000000,
                            Title = "میکرو بیلدینگ ابرو"
                        },
                        new
                        {
                            Id = 63,
                            Active = false,
                            CategoryId = 6,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7639),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "لیفت مژه و آبرو"
                        },
                        new
                        {
                            Id = 64,
                            Active = false,
                            CategoryId = 7,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7641),
                            IsDeleted = false,
                            Price = 2500000,
                            Title = "تست و آزمایش"
                        },
                        new
                        {
                            Id = 65,
                            Active = false,
                            CategoryId = 7,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7643),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "ویزیت پزشکی"
                        },
                        new
                        {
                            Id = 66,
                            Active = false,
                            CategoryId = 7,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7645),
                            IsDeleted = false,
                            Price = 500000,
                            Title = "نوار قلب"
                        },
                        new
                        {
                            Id = 67,
                            Active = false,
                            CategoryId = 7,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7647),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "سونوگرافی و فیزیوتراپی"
                        },
                        new
                        {
                            Id = 68,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7648),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "حمل و نقل حیوانات"
                        },
                        new
                        {
                            Id = 69,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7650),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "نگهداری حیوانات خانگی"
                        },
                        new
                        {
                            Id = 70,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7652),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "تربیت گربه"
                        },
                        new
                        {
                            Id = 71,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7654),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "تربیت سگ"
                        },
                        new
                        {
                            Id = 72,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7656),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "تربین اسب"
                        },
                        new
                        {
                            Id = 73,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7657),
                            IsDeleted = false,
                            Price = 200000,
                            Title = "خدمات آزمایشگاهی حیوانات"
                        },
                        new
                        {
                            Id = 74,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7659),
                            IsDeleted = false,
                            Price = 350000,
                            Title = "صدور شناسنامه حیوانات"
                        },
                        new
                        {
                            Id = 75,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7661),
                            IsDeleted = false,
                            Price = 150000,
                            Title = "واکسن حیوانات"
                        },
                        new
                        {
                            Id = 76,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7663),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "معاینه و درمان حیوانات"
                        },
                        new
                        {
                            Id = 77,
                            Active = false,
                            CategoryId = 8,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7754),
                            IsDeleted = false,
                            Price = 400000,
                            Title = "رادیولوژی و سونوگرافی حیوانات"
                        },
                        new
                        {
                            Id = 78,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7759),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "مدلسازی کامپیوتری"
                        },
                        new
                        {
                            Id = 79,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7764),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "مشاوره مالیاتی"
                        },
                        new
                        {
                            Id = 80,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7768),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "مشاوره سرمایه گذاری"
                        },
                        new
                        {
                            Id = 81,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7773),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "مشاوره حقوقی"
                        },
                        new
                        {
                            Id = 82,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7778),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "طراحی کاتالوگ و بوروشور"
                        },
                        new
                        {
                            Id = 83,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7782),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "طراحی گرافیک وب"
                        },
                        new
                        {
                            Id = 84,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7787),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "طراحی Ui-Ux"
                        },
                        new
                        {
                            Id = 85,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7791),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "طراحی سابت"
                        },
                        new
                        {
                            Id = 86,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7796),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "ساخت اپلیکیشن"
                        },
                        new
                        {
                            Id = 87,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7800),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "تولید محتوای سایت"
                        },
                        new
                        {
                            Id = 88,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7805),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "زیرنویس فیلم"
                        },
                        new
                        {
                            Id = 89,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7809),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "طراحی پوستر"
                        },
                        new
                        {
                            Id = 90,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7814),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "طراحی لوگو"
                        },
                        new
                        {
                            Id = 91,
                            Active = false,
                            CategoryId = 9,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7819),
                            IsDeleted = false,
                            Price = 100000,
                            Title = "قفسه بنوی فروشگاه و انبار"
                        },
                        new
                        {
                            Id = 92,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7824),
                            IsDeleted = false,
                            Price = 350000,
                            Title = "تعمیر کامپیووتر"
                        },
                        new
                        {
                            Id = 93,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7828),
                            IsDeleted = false,
                            Price = 350000,
                            Title = "تعمیر لپ تاپ"
                        },
                        new
                        {
                            Id = 94,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7833),
                            IsDeleted = false,
                            Price = 250000,
                            Title = "تعمیر دستگاه پرینتر"
                        },
                        new
                        {
                            Id = 95,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7838),
                            IsDeleted = false,
                            Price = 500000,
                            Title = "سرویس و تعمیر برد هوشمند"
                        },
                        new
                        {
                            Id = 96,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7844),
                            IsDeleted = false,
                            Price = 250000,
                            Title = "تعمیر ویندوز و نرم افزار"
                        },
                        new
                        {
                            Id = 99,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7846),
                            IsDeleted = false,
                            Price = 400000,
                            Title = "مجازی سازی سرور"
                        },
                        new
                        {
                            Id = 100,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7854),
                            IsDeleted = false,
                            Price = 300000,
                            Title = "خدمات امنیت شبکه"
                        },
                        new
                        {
                            Id = 101,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7856),
                            IsDeleted = false,
                            Price = 1000000,
                            Title = "تعمیرات موبایل و تبلت"
                        },
                        new
                        {
                            Id = 102,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7858),
                            IsDeleted = false,
                            Price = 250000,
                            Title = "تعمیر و نصب اسکنر"
                        },
                        new
                        {
                            Id = 103,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7859),
                            IsDeleted = false,
                            Price = 850000,
                            Title = "سرویس و تعمیر دستگاه تست اسکناس"
                        },
                        new
                        {
                            Id = 104,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7861),
                            IsDeleted = false,
                            Price = 850000,
                            Title = "سرویس و تعمیر دستگاه پول شمار"
                        },
                        new
                        {
                            Id = 105,
                            Active = false,
                            CategoryId = 10,
                            CreatAt = new DateTime(2024, 6, 4, 18, 23, 30, 564, DateTimeKind.Local).AddTicks(7863),
                            IsDeleted = false,
                            Price = 550000,
                            Title = "سرویس و تعمیر دستگاه اثر اگشت"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Expert",
                            NormalizedName = "EXPERT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ExpertService", b =>
                {
                    b.HasOne("HomeService.Core.Entities.Expert", null)
                        .WithMany()
                        .HasForeignKey("ExpertsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeService.Core.Entities.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeService.Core.Entities.Admin", b =>
                {
                    b.HasOne("HomeService.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithOne("Admin")
                        .HasForeignKey("HomeService.Core.Entities.Admin", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Bid", b =>
                {
                    b.HasOne("HomeService.Core.Entities.Expert", "Expert")
                        .WithMany("Bids")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HomeService.Core.Entities.Request", "Request")
                        .WithMany("Bids")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Expert");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Comment", b =>
                {
                    b.HasOne("HomeService.Core.Entities.Customer", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HomeService.Core.Entities.Expert", "Expert")
                        .WithMany("Comments")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Customer", b =>
                {
                    b.HasOne("HomeService.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithOne("Customer")
                        .HasForeignKey("HomeService.Core.Entities.Customer", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeService.Core.Entities.City", "City")
                        .WithMany("Customers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ApplicationUser");

                    b.Navigation("City");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Expert", b =>
                {
                    b.HasOne("HomeService.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithOne("Expert")
                        .HasForeignKey("HomeService.Core.Entities.Expert", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeService.Core.Entities.City", "City")
                        .WithMany("Experts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ApplicationUser");

                    b.Navigation("City");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Request", b =>
                {
                    b.HasOne("HomeService.Core.Entities.Customer", "Customer")
                        .WithMany("Requests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HomeService.Core.Entities.Service", "Service")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Customer");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Service", b =>
                {
                    b.HasOne("HomeService.Core.Entities.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("HomeService.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("HomeService.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeService.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("HomeService.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeService.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Category", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("HomeService.Core.Entities.City", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Experts");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Customer", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Expert", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Request", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("HomeService.Core.Entities.Service", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
